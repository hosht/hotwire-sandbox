version: '3.8'

services:
  base: &base
    build:
      context: .
      dockerfile: ./docker/rails/Dockerfile
      args:
        RUBY_VERSION: '3.0.0'
        BUNDLER_VERSION: '2.2.3'
        PG_MAJOR_VERSION: '11'
    image: hotwire-sandbox:1.0.0

  wait: &wait
    <<: *base
    networks:
    - sandbox
    depends_on:
    - db
    environment:
      WAIT_HOSTS: db:5432
    command: /wait

  app: &app
    <<: *base
    stdin_open: true
    tty: true
    volumes:
    - .:/app
    - rails-cache:/app/tmp/cache
    - ${GEMS_CACHE_DIR:-bundle-data}:/bundle
    networks:
    - sandbox
    depends_on:
    - db
    environment:
      RUBYOPT: '-EUTF-8 -W:deprecated -W:experimental'
      RAILS_ENV: development
      DATABASE_HOST: db

  server:
    <<: *app
    ports:
    - '8080:3000'
    command: /bin/bash -c "rm -f tmp/pids/server.pid && rails server -b '0.0.0.0' -p 3000 -e $${RAILS_ENV}"

  runner:
    <<: *app
    command: /bin/bash

  db:
    build:
      context: ./docker/postgres
      dockerfile: Dockerfile
      args:
        PG_VERSION: '13.1'
    image: hotwire-sandbox-db:1.0.0
    volumes:
    - db-cache:/tmp
    - db-data:/var/lib/postgresql/data
    ports:
    - '5432:5432'
    networks:
    - sandbox
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: '--encoding=UTF-8 --locale=C'


networks:
  sandbox:
    name: hotwire-sandbox-network

volumes:
  bundle-data:
  rails-cache:
  db-cache:
  db-data:
